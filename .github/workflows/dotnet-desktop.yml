name: .NET Core Blazor and MAUI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write 
  packages: write

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        include:
          # - os: macos-15
          #   maui-version: maui-maccatalyst
          #   target: net9.0-maccatalyst
          #   target-args: 
          #   runtime-identifier: 
          #   artifact: ZinzotNet.dmg
          #   package-step: package-dmg
          - os: windows-latest
            maui-version: maui-windows
            target: net9.0-windows
            target-args: -p:TargetPlatformVersion=10.0.17763.0
            runtime-identifier: -r win-x64
            artifact: ZinzotNet-win.zip
            package-step: package-windows

    env:
      Solution_Name: ZinzotNet.sln
      Maui_Project_Directory: ZinzotNet
      Maui_Project_Path: ZinzotNet/ZinzotNet.csproj
      Test_Project_Path: None

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Xcode version
      if: matrix.os == 'macos-15'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.3'
    
    - name: Install Windows 10 SDK
      if: matrix.os == 'windows-latest'
      run: |
        choco install windows-sdk-10.0
        
    - name: Install MAUI Workloads
      run: |
        dotnet workload install ${{ matrix.maui-version }} --skip-manifest-update
        dotnet workload list
      
    # - name: Restore Solution
    #   run: |
    #     dotnet restore $Solution_Name -r any -p:SelfContained=true
    #     dotnet restore $Solution_Name ${{ matrix.runtime-identifier }} -p:SelfContained=true
      
    # - name: Build Solution
    #   run: |
    #     dotnet build ZinzotNet.Shared/ZinzotNet.Shared.csproj -f net9.0 --configuration Release --no-restore
    #     dotnet build ZinzotNet/ZinzotNet.csproj -f ${{ matrix.target }} --configuration Release --no-restore ${{ matrix.runtime-identifier }} ${{ matrix.target-args }}

    # - name: Execute Unit Tests
    #   run: dotnet test $Maui_Project_Path --no-restore --configuration Release
    #   continue-on-error: true 

    # - name: Install xmlstarlet
    #   if: matrix.os == 'macos-15'
    #   run: brew install xmlstarlet

    # - name: Extract ApplicationDisplayVersion for macOS
    #   if: matrix.os == 'macos-15'
    #   run: |
    #     VERSION=$(xmlstarlet sel -t -v "//ApplicationDisplayVersion" $Maui_Project_Path)
    #     echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

    # - name: Extract ApplicationDisplayVersion for Windows
    #   if: matrix.os == 'windows-latest'
    #   run: |
    #     $VERSION = (Select-Xml -Path $env:Maui_Project_Path -XPath '//ApplicationDisplayVersion').Node.InnerText
    #     echo "APP_VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_ENV -Append
    #   shell: pwsh

    # - name: Publish MAUI App for macCatalyst
    #   run: dotnet publish $Maui_Project_Path -f ${{ matrix.target }} -c Release -o ./publish/maccatalyst

    # - name: List All Files in Working Directory
    #   run: |
    #     echo "Recursively listing all files in $(pwd):"
    #     ls -R

    # - name: Package ZinzotNet.app as DMG
    #   run: |
    #     mkdir -p ./dmg_temp
    #     cp -R ./ZinzotNet/bin/Release/net9.0-maccatalyst/ZinzotNet.app ./dmg_temp/
    #     hdiutil create -volname "ZinzotNet" -srcfolder ./dmg_temp -ov -format UDZO ZinzotNet.dmg
    #     rm -rf ./dmg_temp
  
    # - name: Create GitHub Release
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     tag_name: v${{ env.APP_VERSION }}
    #     name: Release v${{ env.APP_VERSION }}
    #     draft: false
    #     prerelease: false
    #     files: ZinzotNet.dmg
    #     token: ${{ secrets.GITHUB_TOKEN }}